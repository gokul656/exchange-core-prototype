package org.malware;

import lombok.extern.slf4j.Slf4j;
import org.malware.order.Order;
import org.malware.order.OrderMode;
import org.malware.order.OrderType;
import org.malware.orderbook.OrderBook;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.UUID;

@Slf4j
public class MainApplication {

    private OrderBook orderBook = new OrderBook();

    public static void main(String[] args) {
        MainApplication mainApplication = new MainApplication();

        mainApplication.addSellOrder(100000);
        mainApplication.addBuyOrder(100000);

        mainApplication.orderBook.getBuyOrders().forEach(
                it -> System.out.println("BUY  :: ORDER ID : " + it.currentOrder.toString())
        );

        mainApplication.orderBook.getSellOrders().forEach(
                it -> System.out.println("SELL :: ORDER ID : " + it.currentOrder.toString())
        );
    }

    private void addBuyOrder(int price) {
        orderBook.addOrder(Order.builder()
                .orderId(UUID.randomUUID().toString())
                .quantity(new BigDecimal("100"))
                .orderType(OrderType.BUY)
                .orderMode(OrderMode.LIMIT)
                .price(new BigInteger(price == 0 ? "10" : String.valueOf(price)))
                .build());
    }

    private void addSellOrder(int price) {
        orderBook.addOrder(Order.builder()
                .orderId(UUID.randomUUID().toString())
                .quantity(new BigDecimal("50"))
                .orderType(OrderType.SELL)
                .orderMode(OrderMode.LIMIT)
                .price(new BigInteger(price == 0 ? "10" : String.valueOf(price)))
                .build());
    }
}